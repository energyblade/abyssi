package com.mygdx.abyssi;

import com.badlogic.gdx.ApplicationAdapter;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.Input.Keys;
import com.badlogic.gdx.audio.Music;
import com.badlogic.gdx.audio.Sound;
import com.badlogic.gdx.graphics.GL20;
import com.badlogic.gdx.graphics.OrthographicCamera;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.math.MathUtils;
import com.badlogic.gdx.math.Rectangle;
import com.badlogic.gdx.math.Vector3;
import com.badlogic.gdx.utils.Array;
import com.badlogic.gdx.utils.ScreenUtils;
import com.badlogic.gdx.utils.TimeUtils;

public class Abyssi extends ApplicationAdapter {
	SpriteBatch batch;
	private Texture knight;
	private OrthographicCamera camera;
	private Rectangle player;

	@Override
	public void create() {
		batch = new SpriteBatch();
		knight = new Texture("knight.jpg");
		
		player = new Rectangle();
		player.x = 1920 / 2 - 64 / 2;
		player.y = 1080 / 2;
		player.width = 100;
		player.height = 100;
	}

	@Override
	public void render() {
		Gdx.gl.glClearColor(1, 0, 0, 1);
		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
		
		//camera.update();
		
		//batch.setProjectionMatrix(camera.combined);
		
		batch.begin();
		batch.draw(knight, player.x, player.y);
		batch.end();
		
		if(Gdx.input.isKeyPressed(Keys.A)) player.x -= 200 * Gdx.graphics.getDeltaTime();
	    if(Gdx.input.isKeyPressed(Keys.D)) player.x += 200 * Gdx.graphics.getDeltaTime();
	    if(Gdx.input.isKeyPressed(Keys.W)) player.y += 200 * Gdx.graphics.getDeltaTime();
	    if(Gdx.input.isKeyPressed(Keys.S)) player.y -= 200 * Gdx.graphics.getDeltaTime();

	    if(player.x < 0) player.x = 0;
	    if(player.x > 1920 - player.getHeight()) player.x = 1920 - player.getHeight();
	    if(player.y < 0) player.y = 0;
	    if(player.y > 1080 - player.getHeight()) player.y = 1080 - player.getHeight();

	}

	@Override
	public void dispose() {
		batch.dispose();
		knight.dispose();
	}
}
