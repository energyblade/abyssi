package com.mygdx.abyssi;

import com.badlogic.gdx.ApplicationAdapter;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.Input.Keys;
import com.badlogic.gdx.audio.Music;
import com.badlogic.gdx.audio.Sound;
import com.badlogic.gdx.graphics.GL20;
import com.badlogic.gdx.graphics.OrthographicCamera;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.math.MathUtils;
import com.badlogic.gdx.math.Rectangle;
import com.badlogic.gdx.math.Vector3;
import com.badlogic.gdx.utils.Array;
import com.badlogic.gdx.utils.ScreenUtils;
import com.badlogic.gdx.utils.TimeUtils;

public class Abyssi extends ApplicationAdapter {
	SpriteBatch batch;
	private Texture knight;
	private OrthographicCamera camera;
	private Rectangle player;
	
	private int maxMs = 300;
	private int xMs = 0, yMs = 0;
	private boolean xDirectionPlus = false, xDirectionMinus = false, yDirection = false;

	@Override
	public void create() {
		
		knight = new Texture("knight.png");
		
		camera = new OrthographicCamera();
	    camera.setToOrtho(false, 1920, 1080);
		batch = new SpriteBatch();
		
		player = new Rectangle();
		player.x = 1920 / 2 - 64 / 2;
		player.y = 1080 / 2;
		player.width = 1;
		player.height = 1;
	}

	@Override
	public void render() {
		ScreenUtils.clear(0, 0, 0.2f, 1);
		
		camera.update();
		
		batch.setProjectionMatrix(camera.combined);
		
		batch.begin();
		batch.draw(knight, player.x, player.y);
		batch.end();
		
		if(Gdx.input.isKeyPressed(Keys.A)) {
			
			if(xMs > 0) {
				xMs -= 40;
			}else if(xMs > -maxMs) {
				xMs -= 5 - (xMs * 0.2);
			}else if(xMs < -maxMs) {
				xMs = -maxMs;
			}
			
			xDirectionMinus = true;

		}else {
			xDirectionMinus = false;
		}

		if(Gdx.input.isKeyPressed(Keys.D)) {
			
			if(xMs < 0) {
				xMs += 40;
			}else if(xMs < maxMs) {
				xMs += 5 + (xMs * 0.2);
			}else if(xMs > maxMs) {
				xMs = maxMs;
			}
			
			xDirectionPlus = true;
			xDirectionMinus = false;

		}else {
			xDirectionPlus = false;
		}
		
	    if(Gdx.input.isKeyPressed(Keys.W)) {
	    	yDirection = true; 
	    }else {
	    	yDirection = false;
	    }
	    
	    if(Gdx.input.isKeyPressed(Keys.S)) {
	    	yDirection = true;
	    }else {
	    	yDirection = false;
	    }

	   if(xDirectionPlus == false && xDirectionMinus == false) {
		   if(xMs > 0) {
			   xMs -= 5 + (xMs * 0.05);
		   }else if(xMs < 20) {
		   }
		   
		   if(xMs < 0) {
			   xMs += 5 + (-xMs * 0.05);
		   }else if(xMs > -20) {
		   }
		  
	   }
	    
	    player.x += xMs * Gdx.graphics.getDeltaTime();
	    
	    if(player.x < 0) player.x = 0;
	    if(player.x > 1920 - player.getHeight()) player.x = 1920 - player.getHeight();
	    if(player.y < 0) player.y = 0;
	    if(player.y > 1080 - player.getHeight()) player.y = 1080 - player.getHeight();

	}

	@Override
	public void dispose() {
		batch.dispose();
		knight.dispose();
	}
}
